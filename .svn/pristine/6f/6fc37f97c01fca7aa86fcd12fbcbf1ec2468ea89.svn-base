import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.sql.*;
import java.util.ArrayList;

import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;


public class PreviousListPanel extends JPanel implements ListSelectionListener {

    private JPanel currentPanel, motherPanel, dropPanel;
    private JComboBox topic, activity, rating;
    private JButton submit, save, addFile, cancel;
    private JLabel writtenReviewLabel, topicLabel, activityLabel, ratingLabel, anonLabel;
    private JTextArea typeHere;
    private JCheckBox anonBox;

    private JFileChooser fc;
    private FileNameExtensionFilter filter;

    //Sql goodies
    Statement st = null;
    Connection conn = null;
    Connection c = null;

    //list code********
    private JList list;
    private JTextArea ta;
    private String[] keywords = {"Java ", "Penis"};
    String[] previousArray = {};

    JList newList = new JList(previousArray);
    PreviousStorage previous;


    public PreviousListPanel(JPanel currentPanel){
        this.currentPanel = currentPanel;

        //titled border
        TitledBorder title = BorderFactory.createTitledBorder("RATES");
        title.setTitleJustification(TitledBorder.CENTER);
        setBorder(title);

        //labels
        topicLabel = new JLabel("Topic: ");
        activityLabel = new JLabel("Activity: ");
        ratingLabel =new JLabel("Rating: ");



        //Grid bag layout
        motherPanel = new JPanel();
        motherPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        add(motherPanel);

        //TOPIC DROPDOWN MENU
        c.fill = GridBagConstraints.HORIZONTAL;
        //c.anchor = GridBagConstraints.NORTH;
        c.weightx = 0.5;
        c.weighty = 0.5;
        c.gridx = 0; //row 0
        c.gridy = 0; //column 0
        c.gridwidth = 3;
        c.insets = new Insets(5,5,5,5);
        motherPanel.add(topicLabel, c);


        //ACTIVITY DROPDOWN MENU
        c.gridx = 0;
        c.gridy = 1;
        c.gridwidth = 3;
        //motherPanel.add(activityLabel, c);
        //newList = new JList(previousArray);
        newList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        newList.addListSelectionListener(this);
        setBackground(Color.WHITE);
        motherPanel.add(newList, c);

        //ANON SECTION
        anonLabel = new JLabel("Reviewed by: ");
        //anonBox = new JCheckBox("Rate Anonymously: ");
        //anonBox.setHorizontalTextPosition(JCheckBox.LEADING);
        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 2;
        //motherPanel.add(anonLabel, c);


        //TYPE HERE SECTION + List selection
        list = new JList(keywords);
        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        list.addListSelectionListener(this);
        setBackground(Color.WHITE);
        motherPanel.add(list, c);







        typeHere = new JTextArea(22, 28);
        JScrollPane scrollPane = new JScrollPane(typeHere);
        typeHere.setBorder(BorderFactory.createLineBorder(Color.black, 1));
        typeHere.setLineWrap(true);
        typeHere.setWrapStyleWord(true);
        c.gridwidth = 3;
        c.gridx = 0;
        c.gridy = 3;
        //motherPanel.add(typeHere, c);
        motherPanel.add(scrollPane, c);


        //RATING BOXES AND ADD FILE
        addFile = new JButton("Add File");
        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 4;
        motherPanel.add(ratingLabel, c);



        //Bottom buttons
        submit = new JButton("Submit");
       // submit.addActionListener(this);
        save = new JButton("Save");
        //save.addActionListener(this);
        cancel = new JButton("Cancel");
        //cancel.addActionListener(this);
        c.anchor = GridBagConstraints.FIRST_LINE_END;

       /* c.gridwidth = 1;
        c.gridx = 2;
        c.gridy = 4;
        motherPanel.add(addFile, c);


        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 5;
        motherPanel.add(submit, c)*/;

        c.gridwidth = 1;
        c.gridx = 1;
        c.gridy = 5;
        motherPanel.add(save, c);


        c.gridwidth = 1;
        c.gridx = 2;
        c.gridy = 5;
       // motherPanel.add(cancel, c);


    }

   /* public void actionPerformed(ActionEvent e) {

        JButton source = (JButton) e.getSource();

        if (source.getText().equals("Save"))
            try {
                c = DriverManager.getConnection("jdbc:sqlite:C://ICS//koni0028//RATES//RATES-AnthonyKonivets//bloba.db");
                String sql = "SELECT topic, activity, writtenReview, attachedFile, rating FROM Submission where userNo = 1";
                pst = c.createStatement();
                ResultSet rs = pst.executeQuery(sql);
                System.out.println("after prep statement");

                while(rs.next()){

                    topicLabel.setText("Topic: " + rs.getString("topic"));
                    activityLabel.setText("Activity: " + rs.getString("activity"));
                    typeHere.setText(rs.getString("writtenReview") + "\n------------------------------------------------------------------------\n");
                    typeHere.append("Attached File:\n\n");
                    typeHere.append(rs.getString("attachedFile"));
                    ratingLabel.setText("Rating: " + rs.getString("rating"));


                    System.out.println("reached 1");
                }

                pst.close();

            } catch (Exception b){
                JOptionPane.showMessageDialog(null, b);
            }

        if (source.getText().equals("Cancel")) {
            CardLayoutManager main = new CardLayoutManager();
            main.switchPanel(currentPanel, "Home Page");

        }

    }*/

    @Override
    public void valueChanged(ListSelectionEvent e) {

        if (list.isSelectionEmpty()) {
            //do nothing
        } else {

            try {

            //String keyword = (String) list.getSelectedValue();

            c = DriverManager.getConnection("jdbc:sqlite:C://ICS//koni0028//RATES//RATES-AnthonyKonivets//bloba.db");
            String sql = "SELECT * FROM Submission";
            st = c.createStatement();
            ResultSet rs;
            rs = st.executeQuery(sql);
                ArrayList<PreviousStorage> previousStorageList = new ArrayList<>();

                previous = new PreviousStorage();
                while (rs.next()){

                            previous.setId(rs.getString("userNo"));
                            previous.setTopic(rs.getString("topic"));
                            previous.setActivity(rs.getString("activity"));
                            previous.setWrittenReview(rs.getString("writtenReview"));
                            previous.setRating(rs.getString("rating"));
                            previous.setAttachedFile(rs.getString("attachedFile"));

                            //previousStorageList.add(previous);



                }
                previousStorageList.add(previous);

                for (PreviousStorage p : previousStorageList){
                    String[] previousArray = { p.getId() + " | " + p.getTopic() + " | " + p.getActivity() + " | " + p.getRating() + "\n"};
                    //typeHere.append(previousArray[0]);
                    System.out.println(previousArray[0]);
                    newList = new JList(previousArray);
                }


                //motherPanel.add(newList, c);

                //typeHere.append(previousStorageList);
                //typeHere.append(previous.getActivity());


                /*for (String a : previousStorageList){
                    typeHere.setText(a + "\n");
                }*/

            //typeHere.append(previousStorageList.toString());
            list.clearSelection();
            //ta.requestFocusInWindow();
        } catch (Exception d){
                JOptionPane.showMessageDialog(null, d);
            }
    }

    }

}


