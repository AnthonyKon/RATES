import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.sql.*;

import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;


public class PreviousReview extends JPanel implements ActionListener{

    private JPanel currentPanel, motherPanel, dropPanel;
    private JComboBox topic, activity, rating;
    private JButton submit, save, addFile, cancel;
    private JLabel writtenReviewLabel, topicLabel, activityLabel, ratingLabel;
    private JTextArea typeHere;
    private JCheckBox anonBox;

    private String[] topics = {"Select Topic","Cybersecurity", "Enterprise Security", "Interactive Design"};
    private String[] activities = {"Select Activity","Lecturer", "Tutorial", "Course Material", "Other"};
    private String[] ratings = {"1 Star", "2 Stars", "3 Stars", "4 Stars", "5 Stars"};

    private JFileChooser fc;
    private FileNameExtensionFilter filter;

    //Sql goodies
    Statement pst = null;
    Connection conn = null;
    Connection c = null;


    public PreviousReview(JPanel currentPanel){
        this.currentPanel = currentPanel;

        //titled border
        TitledBorder title = BorderFactory.createTitledBorder("RATES");
        title.setTitleJustification(TitledBorder.CENTER);
        setBorder(title);

        //labels
        topicLabel = new JLabel("Topic: ");
        activityLabel = new JLabel("Activity: ");
        ratingLabel =new JLabel("Rating: ");



        //Grid bag layout
        motherPanel = new JPanel();
        motherPanel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        add(motherPanel);

        //TOPIC DROPDOWN MENU
        c.fill = GridBagConstraints.HORIZONTAL;
        //c.anchor = GridBagConstraints.NORTH;
        c.weightx = 0.5;
        c.weighty = 0.5;
        c.gridx = 0; //row 0
        c.gridy = 0; //column 0
        c.gridwidth = 3;
        c.insets = new Insets(5,5,5,5);
        motherPanel.add(topicLabel, c);


        //ACTIVITY DROPDOWN MENU
        c.gridx = 0;
        c.gridy = 1;
        c.gridwidth = 3;
        motherPanel.add(activityLabel, c);


        //ANON SECTION
        //rateLabel = new JLabel("Rate anonymously:");
        anonBox = new JCheckBox("Rate Anonymously: ");
        anonBox.setHorizontalTextPosition(JCheckBox.LEADING);
        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 2;
        //motherPanel.add(anonBox, c);


        //TYPE HERE SECTION
        typeHere = new JTextArea(20, 3);
        JScrollPane scrollPane = new JScrollPane(typeHere);
        typeHere.setBorder(BorderFactory.createLineBorder(Color.black, 1));
        typeHere.setLineWrap(true);
        typeHere.setWrapStyleWord(true);
        c.gridwidth = 3;
        c.gridx = 0;
        c.gridy = 3;
        //motherPanel.add(typeHere, c);
        motherPanel.add(scrollPane, c);


        //RATING BOXES AND ADDFILE
        addFile = new JButton("Add File");
        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 4;
        motherPanel.add(ratingLabel, c);



        //Bottom buttons
        submit = new JButton("Submit");
        submit.addActionListener(this);
        save = new JButton("Save");
        save.addActionListener(this);
        cancel = new JButton("Cancel");
        cancel.addActionListener(this);
        c.anchor = GridBagConstraints.FIRST_LINE_END;

        c.gridwidth = 1;
        c.gridx = 2;
        c.gridy = 4;
        motherPanel.add(addFile, c);


        c.gridwidth = 1;
        c.gridx = 0;
        c.gridy = 5;
        motherPanel.add(submit, c);

        c.gridwidth = 1;
        c.gridx = 1;
        c.gridy = 5;
        motherPanel.add(save, c);

        c.gridwidth = 1;
        c.gridx = 2;
        c.gridy = 5;
        motherPanel.add(cancel, c);


    }


    @Override
    public void actionPerformed(ActionEvent e) {

        JButton source = (JButton) e.getSource();

        try {
            c = DriverManager.getConnection("jdbc:sqlite:C://ICS//koni0028//RATES//RATES-AnthonyKonivets//bloba.db");
            String sql = "SELECT topic, activity, writtenReview, rating FROM Submission where userNo = 1";
            pst = c.createStatement();
            ResultSet rs = pst.executeQuery(sql);
            System.out.println("after prep statement");

            while(rs.next()){

                topicLabel.setText("Topic: " + rs.getString("topic"));
                activityLabel.setText("Activity: " + rs.getString("activity"));
                typeHere.setText(rs.getString("writtenReview"));
                ratingLabel.setText("Rating: " + rs.getString("rating"));


                System.out.println("reached 1");
            }



           /* int count = 0;
            while(rs.next()) {
                System.out.println("While Reached");
                count = count + 1;

                if (count == 1) {
                    JOptionPane.showMessageDialog(null, "Submitted");
                    CardLayoutManager main = new CardLayoutManager();
                    main.switchPanel(currentPanel, "Home Page");
                } else if (count > 1) {
                    JOptionPane.showMessageDialog(null, "Duplicate!");
                } else {
                    JOptionPane.showMessageDialog(null, "Incorrect!");
                }
            }
            rs.close();*/
            pst.close();

        } catch (Exception b){
            JOptionPane.showMessageDialog(null, b);
        }




      /*  if (source.getText().equals("Submit")){
            showMessageDialog(this, "Submission Successful!");
        }
        if (source.getText().equals("Cancel")){
            showConfirmDialog(this, "Are you sure you want to cancel?\n" +
                    "Unsaved changes will be lost.");
        }*/


        if (source.getText().equals("Save")){
            int returnSave = fc.showSaveDialog(this);
            if (returnSave == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                //typeHere.append("Saving " + file.getName() + ".\n");

                try {
                    FileWriter fw = new FileWriter(file.getAbsolutePath(), false);
                    typeHere.write(fw);
                } catch (Exception exception){
                    System.out.println(exception);
                }
            }
            else{
                //typeHere.append("Save command cancelled by user.\n");
            }
        }




        //JComboBox cb = (JComboBox)e.getSource();
        //String topicChosen = (String) cb.getSelectedItem();
        //rateLabel.setText(topicChosen);
    }



}
